version: '3.8'

services:
  frontend:
    image: node:20-alpine
    container_name: k6-dashboard-frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "80:5000" # Map to port 80 on host so it's accessible as http://localhost
    command: sh -c "npm install --legacy-peer-deps && npm run dev"
    environment:
      - VITE_API_URL=http://localhost:4000/api
      - CHOKIDAR_USEPOLLING=true # For better hot reloading in Docker
      - HOST=0.0.0.0 # Make the dev server accessible outside the container
    networks:
      - k6-dashboard-network


  backend:
    image: node:20-alpine
    container_name: k6-dashboard-backend
    working_dir: /app
    volumes:
      - ./backend:/app
      - ./k6-tests:/k6-tests
      - ./results:/results
      - ./docker/entrypoint.sh:/entrypoint.sh
    ports:
      - "4000:4000"
    # Use our custom entrypoint script before running the command
    entrypoint: [ "/bin/sh", "/entrypoint.sh" ]
    command: >
      sh -c "
        # Install bash, curl and tar
        apk add --no-cache bash curl git tar && 
        
        # Install k6 properly
        echo 'Installing k6...' &&
        curl -L https://github.com/grafana/k6/releases/download/v0.43.1/k6-v0.43.1-linux-amd64.tar.gz -o k6.tar.gz &&
        tar xzf k6.tar.gz &&
        cp k6-v0.43.1-linux-amd64/k6 /usr/local/bin/ &&
        chmod +x /usr/local/bin/k6 &&
        rm -rf k6-v0.43.1-linux-amd64 k6.tar.gz &&
        echo 'k6 installed successfully:' &&
        k6 version &&
        
        # Install TypeScript tooling
        npm install -g ts-node typescript &&
        
        # Install dependencies and start the app
        npm install &&
        npm run dev
      "
    environment:
      - NODE_ENV=development
      - PORT=4000
      - FRONTEND_URL=http://localhost # Allow frontend at localhost
      - DEBUG=true # Enable debug output
    networks:
      - k6-dashboard-network

networks:
  k6-dashboard-network:
    driver: bridge